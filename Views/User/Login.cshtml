@model LoginViewModel
@{
    ViewData["Title"] = "Login";
}
<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-md-10 ">
            <div class="card shadow rounded-4 overflow-hidden" style="height: 550px;">
                <div class="row g-0 h-100">
                    <!-- Left: Login Form -->
                    <div class="col-md-6 d-flex align-items-center">
                        <div class="card-body p-3 p-md-4">
                            <h3 class="text-center text-primary">RAMA EXPRESS</h3>

                            <h5 class="text-center text-secondary mb-3">LOGIN</h5>

                            <form asp-action="Login" method="post" asp-area="" id="loginForm">

                                <!-- Email Field -->
                                <div class="mb-2">
                                    <label asp-for="Email" class="form-label fw-semibold small">
                                        <i class="fas fa-envelope me-2 text-primary"></i>Email
                                    </label>
                                    <input asp-for="Email" class="form-control" placeholder="Masukkan email Anda" />
                                    <span asp-validation-for="Email" class="text-danger small"></span>
                                </div>

                                <!-- Password Field -->
                                <div class="mb-2">
                                    <label asp-for="Password" class="form-label fw-semibold small">
                                        <i class="fas fa-lock me-2 text-primary"></i>Password
                                    </label>
                                    <div class="input-group">
                                        <input asp-for="Password" type="password" class="form-control"
                                               placeholder="Masukkan password Anda" id="passwordInput" />
                                        <button class="btn btn-outline-secondary" type="button" onclick="togglePassword()" id="toggleButton">
                                            <i class="bi bi-eye" id="toggleIcon"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="Password" class="text-danger small"></span>
                                </div>

                                <!-- Enhanced Error Display -->
                                @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
                                {
                                    <div class="alert alert-danger border-0 rounded-3 mt-3 mb-0" role="alert" id="errorAlert">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        @{
                                            var errors = ViewData.ModelState.SelectMany(x => x.Value.Errors).Select(x => x.ErrorMessage).ToList();
                                        }
                                        @if (errors.Any())
                                        {
                                            @if (errors.Count == 1)
                                            {
                                                <span class="fw-normal">@errors.First()</span>
                                            }
                                            else
                                            {
                                                <div class="fw-normal">
                                                    <ul class="mb-0 ps-3">
                                                        @foreach (var error in errors)
                                                        {
                                                            <li>@error</li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        }
                                    </div>
                                }

                                <!-- Login Button -->
                                <button type="submit" class="btn btn-primary w-100 mb-2 mt-3" id="loginBtn">
                                    <i class="fas fa-sign-in-alt me-2"></i>Login
                                </button>

                            </form>
                        </div>
                    </div>

                    <!-- Right: Image -->
                    <div class="col-md-6 d-none d-md-block position-relative">
                        <div class="h-100 bg-primary bg-gradient d-flex align-items-center justify-content-center">
                            <img src="~/images/login-image.webp"
                                 alt="Login Banner"
                                 class="img-fluid w-100"
                                 style="object-fit: cover; height: 550px;" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function togglePassword() {
        const passwordInput = document.getElementById('passwordInput');
        const toggleIcon = document.getElementById('toggleIcon');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleIcon.classList.remove('bi', 'bi-eye');
            toggleIcon.classList.add('bi', 'bi-eye-slash');
            console.log("Password visible");
        } else {
            passwordInput.type = 'password';
            toggleIcon.classList.remove('bi', 'bi-eye-slash');
            toggleIcon.classList.add('bi', 'bi-eye');
            console.log("Password hidden");
        }
    }

    // Form validation enhancement
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('loginForm');
        const inputs = document.querySelectorAll('.form-control');
        const loginBtn = document.getElementById('loginBtn');

        inputs.forEach(input => {
            input.addEventListener('input', function() {
                if (this.classList.contains('is-invalid')) {
                    this.classList.remove('is-invalid');
                }
                // Hide error alert when user starts typing
                const errorAlert = document.getElementById('errorAlert');
                if (errorAlert) {
                    errorAlert.style.display = 'none';
                }
            });
        });

        // Add loading state to login button
        form.addEventListener('submit', function(e) {
            // Use setTimeout to check after browser validation completes
            setTimeout(() => {
                // Check required fields manually
                const emailField = document.querySelector('input[name="Email"]');
                const passwordField = document.querySelector('input[name="Password"]');

                const isEmailEmpty = !emailField.value.trim();
                const isPasswordEmpty = !passwordField.value.trim();
                const hasVisibleErrors = document.querySelector('.alert-danger:not([style*="display: none"])');
                const hasValidationErrors = document.querySelector('.text-danger:not(:empty)');

                // Only show loading if all conditions are met
                if (!isEmailEmpty && !isPasswordEmpty && !hasVisibleErrors && !hasValidationErrors) {
                    // Check if form wasn't prevented from submitting
                    if (!e.defaultPrevented) {
                        loginBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Logging in...';
                        loginBtn.disabled = true;
                    }
                }
            }, 10); // Small delay to let validation complete
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}