// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RamaExpress.Areas.Admin.Data;

#nullable disable

namespace RamaExpress.Migrations
{
    [DbContext(typeof(RamaExpressAppContext))]
    [Migration("20250624162728_AddTableLaporan")]
    partial class AddTableLaporan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.Pelatihan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deskripsi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DurasiMenit")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SkorMinimal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pelatihan");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanHasil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLulus")
                        .HasColumnType("bit");

                    b.Property<int>("PelatihanId")
                        .HasColumnType("int");

                    b.Property<int>("Skor")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanggalSelesai")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PelatihanId");

                    b.HasIndex("UserId");

                    b.ToTable("PelatihanHasil");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanMateri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Konten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PelatihanId")
                        .HasColumnType("int");

                    b.Property<string>("TipeKonten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Urutan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PelatihanId");

                    b.ToTable("PelatihanMateri");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanPosisi", b =>
                {
                    b.Property<int>("PelatihanId")
                        .HasColumnType("int");

                    b.Property<int>("PosisiId")
                        .HasColumnType("int");

                    b.HasKey("PelatihanId", "PosisiId");

                    b.HasIndex("PosisiId");

                    b.ToTable("PelatihanPosisi");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("MateriTerakhirId")
                        .HasColumnType("int");

                    b.Property<int>("PelatihanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PelatihanId");

                    b.HasIndex("UserId");

                    b.ToTable("PelatihanProgress");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanSoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JawabanBenar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpsiA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpsiB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpsiC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpsiD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PelatihanId")
                        .HasColumnType("int");

                    b.Property<string>("Pertanyaan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Urutan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PelatihanId");

                    b.ToTable("PelatihanSoal");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.Posisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Posisi");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.Sertifikat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NomorSertifikat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PelatihanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TanggalKadaluarsa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TanggalTerbit")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PelatihanId");

                    b.HasIndex("UserId");

                    b.ToTable("Sertifikat");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Posisi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanHasil", b =>
                {
                    b.HasOne("RamaExpress.Areas.Admin.Models.Pelatihan", "Pelatihan")
                        .WithMany("PelatihanHasils")
                        .HasForeignKey("PelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RamaExpress.Areas.Admin.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelatihan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanMateri", b =>
                {
                    b.HasOne("RamaExpress.Areas.Admin.Models.Pelatihan", "Pelatihan")
                        .WithMany("PelatihanMateris")
                        .HasForeignKey("PelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelatihan");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanPosisi", b =>
                {
                    b.HasOne("RamaExpress.Areas.Admin.Models.Pelatihan", "Pelatihan")
                        .WithMany("PelatihanPosisis")
                        .HasForeignKey("PelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RamaExpress.Areas.Admin.Models.Posisi", "Posisi")
                        .WithMany("PelatihanPosisis")
                        .HasForeignKey("PosisiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelatihan");

                    b.Navigation("Posisi");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanProgress", b =>
                {
                    b.HasOne("RamaExpress.Areas.Admin.Models.Pelatihan", "Pelatihan")
                        .WithMany("PelatihanProgresses")
                        .HasForeignKey("PelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RamaExpress.Areas.Admin.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelatihan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.PelatihanSoal", b =>
                {
                    b.HasOne("RamaExpress.Areas.Admin.Models.Pelatihan", "Pelatihan")
                        .WithMany("PelatihanSoals")
                        .HasForeignKey("PelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelatihan");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.Sertifikat", b =>
                {
                    b.HasOne("RamaExpress.Areas.Admin.Models.Pelatihan", "Pelatihan")
                        .WithMany("Sertifikats")
                        .HasForeignKey("PelatihanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RamaExpress.Areas.Admin.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelatihan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.Pelatihan", b =>
                {
                    b.Navigation("PelatihanHasils");

                    b.Navigation("PelatihanMateris");

                    b.Navigation("PelatihanPosisis");

                    b.Navigation("PelatihanProgresses");

                    b.Navigation("PelatihanSoals");

                    b.Navigation("Sertifikats");
                });

            modelBuilder.Entity("RamaExpress.Areas.Admin.Models.Posisi", b =>
                {
                    b.Navigation("PelatihanPosisis");
                });
#pragma warning restore 612, 618
        }
    }
}
