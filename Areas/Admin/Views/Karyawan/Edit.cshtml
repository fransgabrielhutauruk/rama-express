@using RamaExpress.Areas.Admin.Models
@model User
@{
    ViewData["Title"] = "Edit Karyawan";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-1 text-primary">Edit Karyawan</h1>
                    <p class="text-muted mb-0">Perbarui informasi karyawan @Model.Nama</p>
                </div>
                <div>
                    <a asp-area="Admin" asp-controller="Karyawan" asp-action="Details" asp-route-id="@Model.Id"
                       class="btn btn-outline-info me-2">
                        <i class="bi bi-eye me-2"></i>Lihat Detail
                    </a>
                    <a asp-area="Admin" asp-controller="Karyawan" asp-action="Index"
                       class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-2"></i>Kembali
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Form Section -->
    <div class="row justify-content-center">
        <div class="col-lg-12">
            <div class="card shadow-sm border-0 rounded">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="bi bi-pencil-square me-2"></i>Edit Informasi Karyawan
                    </h5>
                </div>
                <div class="card-body p-4">
                    <!-- Success/Error Messages -->
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <script>
                            document.addEventListener('DOMContentLoaded', function() {
                                Swal.fire({
                                    title: 'Berhasil!',
                                    text: '@Html.Raw(TempData["SuccessMessage"])',
                                    icon: 'success',
                                    confirmButtonText: 'OK',
                                    confirmButtonColor: '#28a745',
                                    allowOutsideClick: false,
                                    allowEscapeKey: false
                                }).then(function() {
                                    window.location.href = '@Url.Action("Index", "Karyawan", new { area = "Admin" })';
                                });
                            });
                        </script>
                    }

                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            <strong>Periksa kembali data yang dimasukkan:</strong>
                            <ul class="mb-0 mt-2">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <li>@error.ErrorMessage</li>
                                }
                            </ul>
                        </div>
                    }

                    <form asp-action="Edit" asp-area="Admin" asp-controller="Karyawan" method="post" id="editForm">
                        <input asp-for="Id" type="hidden" />

                        <div class="row g-3">
                            <!-- Nama -->
                            <div class="col-md-6">
                                <label asp-for="Nama" class="form-label fw-semibold">
                                    <i class="bi bi-person me-2 text-primary"></i>Nama Lengkap
                                    <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Nama" class="form-control"
                                       placeholder="Masukkan nama lengkap karyawan" required />
                                <span asp-validation-for="Nama" class="text-danger small"></span>
                            </div>

                            <!-- Posisi - Updated to Dropdown -->
                            <div class="col-md-6">
                                <label asp-for="Posisi" class="form-label fw-semibold">
                                    <i class="bi bi-briefcase me-2 text-primary"></i>Posisi/Jabatan
                                    <span class="text-danger">*</span>
                                </label>
                                <div class="input-group">
                                    <select asp-for="Posisi" class="form-select" asp-items="ViewBag.PosisiList" required>
                                        <option value="">-- Pilih Posisi --</option>
                                    </select>
                                    <a href="@Url.Action("Create", "Posisi", new { area = "Admin" })"
                                       class="btn btn-outline-secondary" title="Tambah Posisi Baru" target="_blank">
                                        <i class="bi bi-plus"></i>
                                    </a>
                                </div>
                                <span asp-validation-for="Posisi" class="text-danger small"></span>
                                <small class="text-muted">
                                    Tidak ada posisi yang sesuai?
                                    <a href="@Url.Action("Create", "Posisi", new { area = "Admin" })" target="_blank" class="text-primary">
                                        Tambah posisi baru
                                    </a>
                                </small>
                            </div>

                            <!-- Email -->
                            <div class="col-md-6">
                                <label asp-for="Email" class="form-label fw-semibold">
                                    <i class="bi bi-envelope me-2 text-primary"></i>Email
                                    <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Email" type="email" class="form-control @(ViewData.ModelState["Email"]?.Errors.Count > 0 ? "is-invalid" : "")"
                                       placeholder="contoh@ramaexpress.com" required />
                                <span asp-validation-for="Email" class="text-danger small"></span>
                            </div>

                            <!-- Password -->
                            <div class="col-md-6">
                                <label asp-for="Password" class="form-label fw-semibold">
                                    <i class="bi bi-lock me-2 text-primary"></i>Password Baru
                                    <small class="text-muted">(Kosongkan jika tidak ingin mengubah)</small>
                                </label>
                                <div class="input-group">
                                    <input asp-for="Password" type="password" id="passwordInput" class="form-control"
                                           placeholder="Minimal 6 karakter jika diisi" minlength="6" />
                                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword()">
                                        <i class="bi bi-eye" id="toggleIcon"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Password" class="text-danger small"></span>
                                <small class="text-muted">Jika diisi, password lama akan diganti dengan yang baru</small>
                            </div>
                        </div>

                        <!-- Current Status Info -->
                        <div class="alert alert-info mt-4" role="alert">
                            <i class="bi bi-info-circle me-2"></i>
                            <strong>Status Saat Ini:</strong>
                            @if (Model.IsActive)
                            {
                                <span class="badge bg-success ms-2">Aktif</span>
                            }
                            else
                            {
                                <span class="badge bg-danger ms-2">Non-Aktif</span>
                            }
                            <br>
                            <small class="mt-2 d-block">
                                Terdaftar sejak: @Model.CreatedAt.ToString("dd MMMM yyyy")
                                @if (Model.UpdatedAt.HasValue)
                                {
                                    <br>
                                    <span>Terakhir diperbarui: @Model.UpdatedAt.Value.ToString("dd MMMM yyyy HH:mm")</span>
                                }
                            </small>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-between mt-4">
                            <div>
                                <a asp-area="Admin" asp-controller="Karyawan" asp-action="Details" asp-route-id="@Model.Id"
                                   class="btn btn-info me-2">
                                    <i class="bi bi-eye me-2"></i>Lihat Detail
                                </a>
                                <a asp-area="Admin" asp-controller="Karyawan" asp-action="Index"
                                   class="btn btn-secondary">
                                    <i class="bi bi-x-circle me-2"></i>Batal
                                </a>
                            </div>
                            <button type="submit" class="btn btn-warning" id="submitBtn">
                                <i class="bi bi-check-circle me-2"></i>Perbarui Data
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Inline Scripts -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Password toggle
    function togglePassword() {
        const input = document.getElementById('passwordInput');
        const icon = document.getElementById('toggleIcon');
        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        } else {
            input.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        }
    }

    // Form loading state - only when form is valid
    document.getElementById('editForm').addEventListener('submit', function(e) {
        const form = this;
        const btn = document.getElementById('submitBtn');

        // Check if form is valid using HTML5 validation
        if (!form.checkValidity()) {
            return;
        }

        // Additional custom validation check
        const requiredFields = form.querySelectorAll('input[required], select[required]');
        let isValid = true;

        requiredFields.forEach(function(field) {
            if (!field.value.trim()) {
                isValid = false;
            }
        });

        // Check password length if provided
        const passwordField = document.getElementById('passwordInput');
        if (passwordField.value && passwordField.value.length < 6) {
            isValid = false;
        }

        if (isValid) {
            btn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Memperbarui...';
            btn.disabled = true;
        }
    });

    // Remove error state when user types
    document.querySelectorAll('.form-control, .form-select').forEach(function(input) {
        input.addEventListener('input', function() {
            if (this.classList.contains('is-invalid')) {
                this.classList.remove('is-invalid');
            }
        });

        input.addEventListener('change', function() {
            if (this.classList.contains('is-invalid')) {
                this.classList.remove('is-invalid');
            }
        });
    });

    // Show confirmation when password is changed
    document.getElementById('passwordInput').addEventListener('blur', function() {
        if (this.value.length > 0) {
            Swal.fire({
                title: 'Konfirmasi Perubahan Password',
                text: 'Password akan diubah jika Anda menyimpan perubahan ini.',
                icon: 'info',
                showCancelButton: false,
                confirmButtonText: 'Mengerti',
                confirmButtonColor: '#0d6efd',
                timer: 3000,
                timerProgressBar: true
            });
        }
    });

    // Auto focus to name field
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelector('input[name="Nama"]').focus();
    });
</script>