@{
    var controller = ViewContext.RouteData.Values["controller"]?.ToString();
    var action = ViewContext.RouteData.Values["action"]?.ToString();
    var area = ViewContext.RouteData.Values["area"]?.ToString();

    // Define breadcrumb items based on current route
    var breadcrumbItems = new List<(string Text, string Url, bool IsActive)>();

    // Always add Home/Dashboard as first item
    // breadcrumbItems.Add(("Dashboard", Url.Action("Index", "Home", new { area = "Admin" }), false));

    // Add specific breadcrumb based on current action
    switch (action?.ToLower())
    {
        case "pelatihan":
            breadcrumbItems.Add(("Pelatihan", null, true));
            break;
        case "laporanpelatihan":
            breadcrumbItems.Add(("Laporan Pelatihan", null, true));
            break;
        case "sertifikat":
            breadcrumbItems.Add(("Sertifikat", null, true));
            break;
        case "pengguna":
            breadcrumbItems.Add(("Pengguna", null, true));
            break;
        case "profile":
            breadcrumbItems.Add(("Profile", null, true));
            break;
        case "preferences":
            breadcrumbItems.Add(("Preferences", null, true));
            break;
        case "create":
            // Add parent page first
            if (controller?.ToLower() == "pelatihan")
            {
                breadcrumbItems.Add(("Pelatihan", Url.Action("Index", "Pelatihan", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Tambah Pelatihan", null, true));
            }
            else if (controller?.ToLower() == "pengguna")
            {
                breadcrumbItems.Add(("Pengguna", Url.Action("Index", "Pengguna", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Tambah Pengguna", null, true));
            }
            else if (controller?.ToLower() == "karyawan")
            {
                breadcrumbItems.Add(("Karyawan", Url.Action("Index", "Karyawan", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Tambah Akun Karyawan", null, true));
            }
            else
            {
                breadcrumbItems.Add(("Tambah Data", null, true));
            }
            break;
        case "edit":
            // Add parent page first
            if (controller?.ToLower() == "pelatihan")
            {
                breadcrumbItems.Add(("Pelatihan", Url.Action("Index", "Pelatihan", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Edit Pelatihan", null, true));
            }
            else if (controller?.ToLower() == "pengguna")
            {
                breadcrumbItems.Add(("Pengguna", Url.Action("Index", "Pengguna", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Edit Pengguna", null, true));
            }
            else
            {
                breadcrumbItems.Add(("Edit Data", null, true));
            }
            break;
        case "details":
            // Add parent page first
            if (controller?.ToLower() == "pelatihan")
            {
                breadcrumbItems.Add(("Pelatihan", Url.Action("Index", "Pelatihan", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Detail Pelatihan", null, true));
            }
            else if (controller?.ToLower() == "pengguna")
            {
                breadcrumbItems.Add(("Pengguna", Url.Action("Index", "Pengguna", new { area = "Admin" }), false));
                breadcrumbItems.Add(("Detail Pengguna", null, true));
            }
            else
            {
                breadcrumbItems.Add(("Detail", null, true));
            }
            break;
        case "index":
        default:
            // Remove the last item if it's just Dashboard -> Dashboard
            if (action?.ToLower() == "index")
            {
                breadcrumbItems.Add((controller, null, true));
            }
            break;
    }
}

<style>
    .breadcrumb-container {
        background: #fff;
        padding: 0 1.5rem;
        border-bottom: 1px solid #e3e6f0;
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: nowrap;
        gap: 1rem;
        min-height: 70px;
        height: 70px;
    }

    .breadcrumb-nav {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .sidebar-toggle {
        background: none;
        border: none;
        color: #5a5c69;
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        font-size: 1.2rem;
    }

        .sidebar-toggle:hover {
            background: #f8f9fc;
            color: #2c3e50;
        }

    .breadcrumb {
        background: none;
        padding: 0;
        margin: 0;
        font-size: 0.875rem;
    }

    .breadcrumb-item {
        display: flex;
        align-items: center;
    }

        .breadcrumb-item + .breadcrumb-item::before {
            content: ">";
            color: #858796;
            padding: 0 0.5rem;
            font-weight: normal;
        }

        .breadcrumb-item a {
            color: #5a5c69;
            text-decoration: none;
            transition: color 0.3s ease;
        }

            .breadcrumb-item a:hover {
                color: #2c3e50;
            }

        .breadcrumb-item.active {
            color: #858796;
            font-weight: 500;
        }

    .page-header {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 400;
        color: #5a5c69;
        margin: 0;
    }

    .page-subtitle {
        color: #858796;
        font-size: 0.875rem;
        margin: 0;
    }

    .user-profile {
        padding: 0;
        border: none;
        margin: 0;
        display: flex;
        align-items: center;
        height: 100%;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #5a5c69;
        transition: all 0.3s ease;
        text-decoration: none;
        padding: 0.5rem;
        border-radius: 8px;
        height: auto;
    }

        .user-info:hover {
            background-color: #f8f9fc;
            color: #2c3e50;
        }

    .user-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: #3498db;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 0.9rem;
        flex-shrink: 0;
    }

    .user-details {
        line-height: 1.2;
        min-width: 0;
    }

        .user-details .fw-semibold {
            font-size: 0.875rem;
            margin-bottom: 1px;
        }

        .user-details small {
            font-size: 0.75rem;
        }

    .dropdown-menu {
        background: #fff;
        border: 1px solid #e3e6f0;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
    }

    @@media (max-width: 768px) {
        .breadcrumb-container

    {
        padding: 0 1rem;
        height: 60px;
        min-height: 60px;
    }

    .breadcrumb {
        font-size: 0.8rem;
    }

    .user-avatar {
        width: 32px;
        height: 32px;
        font-size: 0.8rem;
    }

    .user-details .fw-semibold {
        font-size: 0.8rem;
    }

    .user-details small {
        font-size: 0.7rem;
    }

    }
</style>

<div class="breadcrumb-container">
    <div class="breadcrumb-nav">
        <button class="sidebar-toggle" id="sidebarToggle">
            <i class="bi bi-layout-sidebar-inset"></i>
        </button>

        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                @foreach (var item in breadcrumbItems)
                {
                    if (item.IsActive)
                    {
                        <li class="breadcrumb-item active" aria-current="page">@item.Text</li>
                    }
                    else
                    {
                        <li class="breadcrumb-item">
                            <a href="@item.Url">@item.Text</a>
                        </li>
                    }
                }
            </ol>
        </nav>
    </div>
    <div class="page-header">
        <!-- User Profile Section -->
        <div class="user-profile">
            <div class="dropdown">
                <a href="#" class="user-info" data-bs-toggle="dropdown" aria-expanded="false">
                    <div class="user-avatar">
                        A
                    </div>
                    <div class="user-details">
                        <div class="fw-semibold">Admin User</div>
                        <small class="text-muted">Administrator</small>
                    </div>
                </a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item text-dark" href="/admin/profile"><i class="bi bi-person me-2"></i>Profile</a></li>
                    <li><a class="dropdown-item text-dark" href="/admin/preferences"><i class="bi bi-gear me-2"></i>Preferences</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item text-dark" href="/logout"><i class="bi bi-box-arrow-right me-2"></i>Logout</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>